/* ********** Reset ********** */

/* Definimos una serie de variables CSS */
:root {
    --main-font: sans-serif;
    --font-size: 16px;
    --main-color: #4ECDC4;
    --second-color: #1A535C;
    --main-modal-color: rgba(78, 205, 196, 0.85); /* Mismos colores pero con un poca opacidad. */
    --second-modal-color: rgba(26, 83, 93, 0.85);
    --container-width: 1200px; /* Generar containers con una máxima anchura de crecimiento */
}

html {
    box-sizing: border-box;
    font-family: var(--main-font);
    font-size: var(--font-size);
    scroll-behavior: smooth;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    margin: 0;
    overflow-x: hidden; /* Ocultar todo lo que se desborde en sentido horizontal. esto evita el scroll horizontal. */
}

img {
    max-width: 100%; /* Adaptar las imágenes a la máxima anchura de su contenedor. */
    height: auto;
}

/* ********** Menú Hamburguesa ********** */

.header {
    position: sticky;
    top: 0;
    padding: 1rem;
    background-color: var(--main-color);
    color: var(--second-color);
}

.header h1 {
    margin: 0;
    text-align: center;
}

.section {
    padding: 2rem;
    padding-top: 4rem;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: var(--container-width);
    min-height: 100vh;
    text-align: center;
}

.panel {
    position: fixed;
    z-index: 998;
    top: 0; /* Esta es una manera de estirar el elemento con position fixed para que ocupe todo el espacio desde top */
    bottom: 0; /* Esta es una manera de estirar el elemento con position fixed para que ocupe todo el espacio hasta bottom*/
    left: 0;
    right: 0;
    width: 100%; /* Como el position del elemento esta fixed, la anchura solo es la de su contenido, ponemos width en 100% para que ocupe el 100% de la pantalla */
    background-color: var(--second-modal-color);
    opacity: 0;
    visibility: hidden;
    transition: transform .8s ease, opacity .8s ease;
    /* transformación para trasladar el panel desplegable hacia arriba mientras no lo necesitemos. */
    /* transform: translate(-100%, 0); */

}

.panel.is-active { /* Estilos para panel cuando este activo */
    /* transform: translate(0, 0); */
    opacity: 1;
    visibility: visible;
}

.panel-btn {
    position: fixed; /* Fijar la posición para que no se mueva con el scroll */
    z-index: 999; /* nivel de capas o nivel de eje z: como cambiamos el position que por defecto era static, con z-index en un número alto, evitamos que cualquier elemento aparezca sobre del botón. */
    bottom: 1vh; /* Ubicado a un vieport height de la parte inferior */
    right: 1vw;/* Ubicado a un viewport width de la derecha */
    width: 4rem;
    height: 4rem; /* Anchura y altura iguales para que el boton sea cuadrado */
    border-radius: 50%;
    padding: 0;
    display: flex; /* Flexbox para que los elementos dentro del boton se centren perfectament */
    justify-content: center;
    align-items: center;
    background-color: var(--main-color);
}

.menu {
    width: inherit; /* Heredar la anchura de su contenedor */
    display: flex;
    flex-direction: column; /* Como la direcciòn es en columna, justify-content trabaja sobre "y" y align-items trabaja sobre "x" */
    justify-content: space-evenly;
    align-items: center;
    text-align: center;
}

.menu a { /* estilos para los enlaces */
    padding: 2rem;
    width: inherit;
    display: block;
    font-size: 1.5rem;
    text-decoration: none;
    color: var(--main-color);
    transition: all 0.3s ease; /* Transición lenta para el estado hover */
}

.menu a:hover { /* pseudo-case hover para los enlaces */
    font-weight: bold;
    color: var(--second-color);
    background-color: var(--main-modal-color);
}

/* ********** Eventos del Teclado ********** */

.stage {
    display: flex;
    min-height: 50vh;
    background-color: var(--second-color);
}

.ball {
    margin: auto;
    width: 4rem;
    height: 4rem;
    border-radius: 50%;background-color: var(--main-color);
}